

import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.print.PrinterException;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.text.MessageFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */

/**
 *
 * @author fbsel
 */
public final class tabloGöstermeEkrani extends javax.swing.JInternalFrame {
     ArrayList row;
     String fileYol;
     String veri[];
     
     //hesapla metodu için
     double GANO=0.0;
     double toplamCarpi=0.0;
     int toplamAkts=0;    
     
     PdfPTable pTable;
     
     /**
     * Creates new form tabloGöstermeEkrani
     * @throws java.io.IOException
     */
    public tabloGöstermeEkrani()throws IOException {
        initComponents();
        eklemeBolumu();
        hesapla();
    }

    public void eklemeBolumu() throws FileNotFoundException, IOException{
        fileYol = "C:\\Users\\fbsel\\Downloads\\dersler.txt";;
        File file = new File(fileYol);
        BufferedReader br = new BufferedReader(new FileReader(file));
        String satir=br.readLine();
        
        
        //arrayliste atama
        row=new ArrayList();
        DefaultTableModel model=(DefaultTableModel) jTable1.getModel();
        while(satir!=null){
            row.add(satir);
            satir=br.readLine();
        }
        for(int i=0;i<row.size();i++){
            String line=row.get(i).toString();
            String veriSatir[]=line.split(",");
            veri=veriSatir;
            model.addRow(veriSatir);
        }
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jButtonSil = new javax.swing.JButton();
        m_ganoGoster = new javax.swing.JLabel();
        jButtonPdf = new javax.swing.JButton();
        jButtonYazdir = new javax.swing.JButton();

        setClosable(true);
        setMaximizable(true);

        jLabel1.setText("Ders Liste Tablosu");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Dönem", "Ders Kodu", "Ders Adı", "AKTS", "Ortalama", "Harf Notu"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel2.setText("Genel Not Ortalaması: ");
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButtonSil.setText("Sil");
        jButtonSil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSilActionPerformed(evt);
            }
        });

        m_ganoGoster.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        m_ganoGoster.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButtonPdf.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pdf.png"))); // NOI18N
        jButtonPdf.setPreferredSize(new java.awt.Dimension(70, 70));
        jButtonPdf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPdfActionPerformed(evt);
            }
        });

        jButtonYazdir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/print.jpg"))); // NOI18N
        jButtonYazdir.setPreferredSize(new java.awt.Dimension(70, 70));
        jButtonYazdir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonYazdirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(m_ganoGoster, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(139, 139, 139)
                .addComponent(jButtonPdf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jButtonYazdir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 43, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonSil, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButtonSil))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonPdf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonYazdir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(m_ganoGoster, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSilActionPerformed
        int secilenSatir;
        if(jButtonSil.getText().equals("Sil")){
            DefaultTableModel model =(DefaultTableModel) jTable1.getModel();
            secilenSatir=jTable1.getSelectedRow();
            model.removeRow(secilenSatir);
            jButtonSil.setText("Kaydet");
        }
        else if(jButtonSil.getText().equals("Kaydet")){
            jButtonSil.setText("Sil");
            File f = new File(fileYol);
            
            try {
                FileWriter fileWriter=new FileWriter(f);
                BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                for(int i=0;i<jTable1.getRowCount();i++){
                    for(int j=0;j<jTable1.getColumnCount();j++){
                        bufferedWriter.write(jTable1.getValueAt(i, j).toString() + ",");
                    }
                    bufferedWriter.newLine();
                }
                bufferedWriter.close();
                fileWriter.close();
            }catch (FileNotFoundException ex) {
                Logger.getLogger(tabloGöstermeEkrani.class.getName()).log(Level.SEVERE, null, ex);
            }catch (IOException ex) {
                Logger.getLogger(tabloGöstermeEkrani.class.getName()).log(Level.SEVERE, null, ex);
            } 
            hesapla();
        }
    }//GEN-LAST:event_jButtonSilActionPerformed

    private void jButtonYazdirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonYazdirActionPerformed
        MessageFormat format1=new  MessageFormat("GANO :"+GANO);
        MessageFormat format2=new MessageFormat("Sayfa{0,number,integer}");
        
         try {
             jTable1.print(JTable.PrintMode.NORMAL,format1,format2);
         } catch (PrinterException ex) {
             Logger.getLogger(tabloGöstermeEkrani.class.getName()).log(Level.SEVERE, null, ex);
         }
    }//GEN-LAST:event_jButtonYazdirActionPerformed

    private void jButtonPdfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPdfActionPerformed
         try {
             pdfDokumani();
         } catch (FileNotFoundException ex) {
             Logger.getLogger(tabloGöstermeEkrani.class.getName()).log(Level.SEVERE, null, ex);
         }
    }//GEN-LAST:event_jButtonPdfActionPerformed
    
    public void hesapla(){
        for(int i=0;i<jTable1.getRowCount();i++){
         int akts = Integer.valueOf(jTable1.getValueAt(i, 3).toString());
         String harf=jTable1.getValueAt(i, 5).toString();
         if(harf.equals("AA=4.0")){
             toplamCarpi=toplamCarpi+akts*4.0;
         }
         if(harf.equals("BA=3.5")){
             toplamCarpi=toplamCarpi+akts*3.5;
         }
         if(harf.equals("BB=3.0")){
             toplamCarpi=toplamCarpi+akts*3.0;
         }
         if(harf.equals("CB=2.5")){
             toplamCarpi=toplamCarpi+akts*2.5;
         }
         if(harf.equals("CC=2.0")){
             toplamCarpi=toplamCarpi+akts*2.0;
         }
         if(harf.equals("DC=1.5")){
             toplamCarpi=toplamCarpi+akts*1.5;
         }
         if(harf.equals("DD=1.0")){
             toplamCarpi=toplamCarpi+akts*1.0;
         }
         if(harf.equals("FD=0.5")){
             toplamCarpi=toplamCarpi+akts*0.5;
         }
         if(harf.equals("FF=0.0")){
             toplamCarpi=toplamCarpi+akts*0.0;
         }
         toplamAkts = toplamAkts + akts;
        }
        GANO =toplamCarpi/toplamAkts;
        String g = String.valueOf(GANO);
        m_ganoGoster.setText(g);
    }
    public void pdfDokumani() throws FileNotFoundException{
    String yol="C:\\Users\\fbsel\\Downloads\\";
    
    //pdf olusturma
    Document document = new Document();
    
         try {
             PdfWriter.getInstance(document, new FileOutputStream(yol+"dersler.pdf"));
             document.open();
             Paragraph paragraph = new Paragraph("Transkript............");
             Paragraph bos = new Paragraph(" ");
             pTable = new PdfPTable(6);
             pTable.setWidthPercentage(105);
             pTable.setSpacingBefore(11f);
             pTable.setSpacingAfter(11f);
             
             float[] colWidth={2f,2f,2f,2f,2f,2f};
             pTable.setWidths(colWidth);
             
             PdfPCell donem = new PdfPCell(new Paragraph("Donem"));
             PdfPCell d_kod = new PdfPCell(new Paragraph("Ders Kodu"));
             PdfPCell d_adi = new PdfPCell(new Paragraph("Ders Adi"));
             PdfPCell akts = new PdfPCell(new Paragraph("AKTS"));
             PdfPCell ort = new PdfPCell(new Paragraph("Ortalama"));
             PdfPCell harfN = new PdfPCell(new Paragraph("Harf Notu"));
             
             pTable.addCell(donem);
             pTable.addCell(d_kod);
             pTable.addCell(d_adi);
             pTable.addCell(akts);
             pTable.addCell(ort);
             pTable.addCell(harfN);
             
             int a=jTable1.getRowCount();
             for(int i=0;i<a;i++){
               String d=jTable1.getValueAt(i,0).toString();
               String kod=jTable1.getValueAt(i,1).toString();
               String ad=jTable1.getValueAt(i,2).toString();
               String aktS=jTable1.getValueAt(i,3).toString();
               String orta=jTable1.getValueAt(i,4).toString();
               String harf=jTable1.getValueAt(i,5).toString();
               
               pTable.addCell(d);
               pTable.addCell(kod);
               pTable.addCell(ad);
               pTable.addCell(aktS);
               pTable.addCell(orta);
               pTable.addCell(harf);
             }
             
             document.add(paragraph);
             document.add(new Paragraph("------------------------------------------"));
             document.add(bos);
             document.add(pTable);
             document.add(bos);
             document.add(new Paragraph("Genel agirlikli not ortalamasi : "+GANO));
               
             
             
         } catch (DocumentException ex) {
             Logger.getLogger(tabloGöstermeEkrani.class.getName()).log(Level.SEVERE, null, ex);
         }
         document.close();
         JOptionPane.showMessageDialog(this,"Pdf Olusturuldu");
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonPdf;
    private javax.swing.JButton jButtonSil;
    private javax.swing.JButton jButtonYazdir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel m_ganoGoster;
    // End of variables declaration//GEN-END:variables
}
